//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Получение данных об организации/контрагенте
Процедура ПолучениеСведенийОбОрганизации()
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Дата);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Дата елочкой
Процедура ПолучениеДанныхСотрудника()
	ДатаЕлочкой = Формат(Дата, "ДФ='«дд» ММММ гггг'")
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Получение данных о сотруднике
Процедура ПолучениеДанныхСотрудника()

	ПолучаемыеДанные = "ФИОПолные,Пол,ТабельныйНомер,Организация,Подразделение,Должность,ДатаПриема,ДатаУвольнения,Возраст,Фамилия, Имя, Отчество, Наименование, 
	|Код, ФизическоеЛицоКод,АдресДляИнформирования,  АдресДляИнформированияПредставление, АдресЗаПределамиРФ, АдресЗаПределамиРФПредставление, АдресМестаПроживания, 
	|АдресМестаПроживанияПредставление, АдресПоПрописке, АдресПоПропискеПредставление, ТелефонДомашний, ТелефонДомашнийПредставление, ТелефонРабочий, ТелефонРабочийПредставление, EMail, 
	|EMailПредставление, ДокументПериодРегистрации, ДокументВид, ДокументКодМВД, ДокументСерия, ДокументНомер, ДокументДатаВыдачи, ДокументСрокДействия, ДокументКемВыдан, 
	|ДокументКодПодразделения, ДокументПредставление, ИнвалидностьПериодРегистрации, Инвалидность, ИнвалидностьДатаВыдачи, ИнвалидностьСрокДействияСправки, ГражданствоПериодРегистрации, 
	|Страна, ИННВСтранеГражданства, ПроцентСевернойНадбавки, ТекущаяОрганизация, ТекущееПодразделение, ТекущаяДолжность, ТекущийВидЗанятости, ОсновноеРабочееМестоВОрганизации, ДатаПриема, 
	|ДатаЗавершенияРаботы, ОформленПоТрудовомуДоговору, ДатаУвольнения, ТекущаяТарифнаяСтавка, ТекущийСпособРасчетаАванса, ТекущийАванс, ДатаНачалаУчета, ПриказОПриеме, ПриказОПриемеДата, 
	|ПриказОПриемеНомер, НазначениеПодработки, ПриказОбУвольнении, ПриказОбУвольненииДата, ПриказОбУвольненииНомер, ПриказОбУвольненииСтатьяТКРФ, ПрекращениеПодработки, 
	|РабочееМестоПериодРегистрации, РабочееМестоРегистратор, ВидСобытия, КоличествоСтавок, ЭтоГоловнойСотрудник, УчетЗатратПериодРегистрации, СпособОтраженияЗарплатыВБухучете,  
	|СтатьяФинансирования, УчетЗатратДокументОснование, ОплатаТрудаПериодЗаписи, ОплатаТрудаРегистратор, ТарифнаяСтавка, ФОТ, Надбавка, ВидЗанятостиПериодЗаписи, ВидЗанятостиРегистратор, 
	|ВидЗанятости, АвансПериодЗаписи, АвансРегистратор, СпособРасчетаАванса, Аванс, КлассУсловийТрудаПериодРегистрации, КлассУсловийТруда, КлассУсловийТрудаДатаРегистрацииИзменений, 
	|ЗарплатныйПроектПериодРегистрации, ЗарплатныйПроектРегистратор, ЗарплатныйПроект, ФизическоеЛицоНаименование, ОтношениеКЕНВД, НомерЛицевогоСчета"; // Полный список

	СписокДанныхОСотруднике = КадровыйУчет.КадровыеДанныеСотрудника(Истина, Сотрудник, ПолучаемыеДанные , Дата);
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Создание новой записи в истории ФИО
Процедура ФИОИнициалы()
	ФИОИнициалы = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ФизЛицо); 
		
	Если Не ЗначениеЗаполнено(ФИОИнициалы) тогда
		СозданиеНовойЗаписиВИсторииФИО(ФизЛицо);
		ФИОИнициалы = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
КонецПроцедуры

Процедура СозданиеНовойЗаписиВИсторииФИО(ФизЛицо);

МассивЧастейФИО = СтрРазделить(ФизЛицо, " ");
	Если МассивЧастейФИО.Количество() > 0 тогда
		Фамилия  = ?((МассивЧастейФИО.Количество() >= 1), МассивЧастейФИО[0], "");
		Имя 	 = ?((МассивЧастейФИО.Количество() >= 2), МассивЧастейФИО[1], "");
		Отчество = ?((МассивЧастейФИО.Количество() >= 3), МассивЧастейФИО[2], "");

		НоваяЗапись = РегистрыСведений.ФИОФизическихЛиц.СоздатьМенеджерЗаписи();

		НоваяЗапись.Период  		= НачалоГода(ТекущаяДатаСеанса());
		НоваяЗапись.Фамилия  		= Фамилия;
		НоваяЗапись.Имя 	 		= Имя;
		НоваяЗапись.Отчество 		= Отчество;
		НоваяЗапись.ФизическоеЛицо 	= ФизЛицо;
		НоваяЗапись.Инициалы 		= ?(ЗначениеЗаполнено(Имя), Лев(Имя, 1) + ".", "") + ?(ЗначениеЗаполнено(Отчество), Лев(Отчество, 1) + ".", "");
		НоваяЗапись.ФИОСлужебные 	= НоваяЗапись.Фамилия + " " + НоваяЗапись.Инициалы;
		НоваяЗапись.Записать();
	КонецЕсли;	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Поиск внутри строки
Процедура ПоискВнутриСтроки();

	НомерВСтроке = СтрНайти(ИсходнаяСтрока, ПодстрокаПоиска) // Получение номера нахождения текущего куска текста внутри полной строки

	Если НомерВСтроке > 0 тогда // переходит, если есть в строке
		ОбщегоНазначения.СообщитьПользователю("В строке есть то, что вы искали");
	Конецесли;
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
